{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1","program":"/home/miguel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","thread_local","/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=7043380d2be1a9ba","-C","extra-filename=-7043380d2be1a9ba","--out-dir","/home/miguel/Documents/rust-exercises/capitalizing/target/rls/debug/deps","-L","dependency=/home/miguel/Documents/rust-exercises/capitalizing/target/rls/debug/deps","--extern","lazy_static=/home/miguel/Documents/rust-exercises/capitalizing/target/rls/debug/deps/liblazy_static-4f4c3986ba0f23cb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/miguel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/miguel/Documents/rust-exercises/capitalizing/target/rls/debug/deps/libthread_local-7043380d2be1a9ba.rmeta"},"prelude":{"crate_id":{"name":"thread_local","disambiguator":[17462703088307871476,2001823350368476545]},"crate_root":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src","external_crates":[{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13842155912677385872,11660590378338683385]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1145230128757463294,15976268636418953592]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10006185802367012891,4937926339965588888]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18134491841186215314,8619879253945163470]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[4357087487764653857,7816708319091665300]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10862771416828768076,14090399182622295334]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7832813774001485751,4465207999706185911]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14203079308812153325,7069038021421518271]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17468104730350570711,1510909898039763528]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[11081656445949358564,12304596919514716713]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[4496289705150708668,14963538919535077439]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[12585038344938944291,11081610577875308163]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4866546307375520792,3681606541934731072]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[6903286030758146719,12939842262273902871]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[2376082943716136021,4502182007221238058]}}],"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":333,"byte_end":19233,"line_start":8,"line_end":607,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2867,"byte_end":2881,"line_start":80,"line_end":80,"column_start":18,"column_end":32},"alias_span":null,"name":"CachedIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2883,"byte_end":2896,"line_start":80,"line_end":80,"column_start":34,"column_end":47},"alias_span":null,"name":"CachedIterMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2898,"byte_end":2915,"line_start":80,"line_end":80,"column_start":49,"column_end":66},"alias_span":null,"name":"CachedThreadLocal","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":333,"byte_end":19233,"line_start":8,"line_end":607,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":24},{"krate":0,"index":45},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":215},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":239},{"krate":0,"index":245}],"decl_id":null,"docs":" Per-object thread-local storage","sig":null,"attributes":[{"value":"! Per-object thread-local storage","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":333,"byte_end":368,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":369,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! This library provides the `ThreadLocal` type which allows a separate copy of","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":373,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! an object to be used for each thread. This allows for per-object","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":454,"byte_end":522,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"! thread-local storage, unlike the standard library's `thread_local!` macro","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":523,"byte_end":600,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! which only allows static thread-local storage.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":601,"byte_end":651,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":652,"byte_end":655,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! Per-thread objects are not destroyed when a thread exits. Instead, objects","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":656,"byte_end":734,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! are only destroyed when the `ThreadLocal` containing them is destroyed.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":735,"byte_end":810,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":811,"byte_end":814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! You can also iterate over the thread-local values of all thread in a","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":815,"byte_end":887,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! `ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":888,"byte_end":967,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"! only be done if you have mutable access to the `ThreadLocal` object, which","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":968,"byte_end":1046,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"! guarantees that you are the only thread currently accessing it.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1047,"byte_end":1114,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1115,"byte_end":1118,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! A `CachedThreadLocal` type is also provided which wraps a `ThreadLocal` but","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1119,"byte_end":1198,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"! also uses a special fast path for the first thread that writes into it. The","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1199,"byte_end":1278,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! fast path has very low overhead (<1ns per access) while keeping the same","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1279,"byte_end":1355,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"! performance as `ThreadLocal` for other threads.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1356,"byte_end":1407,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1408,"byte_end":1411,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! Note that since thread IDs are recycled when a thread exits, it is possible","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1412,"byte_end":1491,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"! for one thread to retrieve the object of another thread. Since this can only","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1492,"byte_end":1572,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"! occur after a thread has exited this does not lead to any race conditions.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1573,"byte_end":1651,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1652,"byte_end":1655,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1656,"byte_end":1670,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1671,"byte_end":1674,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! Basic usage of `ThreadLocal`:","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1675,"byte_end":1708,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1709,"byte_end":1712,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1713,"byte_end":1724,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"! use thread_local::ThreadLocal;","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1725,"byte_end":1759,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"! let tls: ThreadLocal<u32> = ThreadLocal::new();","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1760,"byte_end":1811,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"! assert_eq!(tls.get(), None);","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1812,"byte_end":1844,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"! assert_eq!(tls.get_or(|| 5), &5);","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1845,"byte_end":1882,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"! assert_eq!(tls.get(), Some(&5));","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1883,"byte_end":1919,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"! ```","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1920,"byte_end":1927,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1928,"byte_end":1931,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Combining thread-local values into a single result:","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1932,"byte_end":1987,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1988,"byte_end":1991,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":1992,"byte_end":2003,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"! use thread_local::ThreadLocal;","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2004,"byte_end":2038,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"! use std::sync::Arc;","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2039,"byte_end":2062,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"! use std::cell::Cell;","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2063,"byte_end":2087,"line_start":49,"line_end":49,"column_start":1,"column_end":25}},{"value":"! use std::thread;","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2088,"byte_end":2108,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2109,"byte_end":2112,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! let tls = Arc::new(ThreadLocal::new());","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2113,"byte_end":2156,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2157,"byte_end":2160,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! // Create a bunch of threads to do stuff","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2161,"byte_end":2205,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"! for _ in 0..5 {","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2206,"byte_end":2225,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"!     let tls2 = tls.clone();","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2226,"byte_end":2257,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"!     thread::spawn(move || {","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2258,"byte_end":2289,"line_start":57,"line_end":57,"column_start":1,"column_end":32}},{"value":"!         // Increment a counter to count some event...","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2290,"byte_end":2347,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"!         let cell = tls2.get_or(|| Cell::new(0));","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2348,"byte_end":2400,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"!         cell.set(cell.get() + 1);","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2401,"byte_end":2438,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"!     }).join().unwrap();","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2439,"byte_end":2466,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"! }","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2467,"byte_end":2472,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2473,"byte_end":2476,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! // Once all threads are done, collect the counter values and return the","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2477,"byte_end":2552,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"! // sum of all thread-local counter values.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2553,"byte_end":2599,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"! let tls = Arc::try_unwrap(tls).unwrap();","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2600,"byte_end":2644,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"! let total = tls.into_iter().fold(0, |x, y| x + y.get());","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2645,"byte_end":2705,"line_start":67,"line_end":67,"column_start":1,"column_end":61}},{"value":"! assert_eq!(total, 5);","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2706,"byte_end":2731,"line_start":68,"line_end":68,"column_start":1,"column_end":26}},{"value":"! ```","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2732,"byte_end":2739,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":2741,"byte_end":2763,"line_start":71,"line_end":71,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":23999,"byte_end":24016,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"CachedThreadLocal","qualname":"::cached::CachedThreadLocal","value":"CachedThreadLocal {  }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"decl_id":null,"docs":" Wrapper around `ThreadLocal` which adds a fast path for a single thread.","sig":null,"attributes":[{"value":"/ Wrapper around `ThreadLocal` which adds a fast path for a single thread.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":23669,"byte_end":23745,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":23746,"byte_end":23749,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This has the same API as `ThreadLocal`, but will register the first thread","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":23750,"byte_end":23828,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ that sets a value as its owner. All accesses by the owner will go through","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":23829,"byte_end":23906,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ a special fast path which is much faster than the normal `ThreadLocal` path.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":23907,"byte_end":23987,"line_start":13,"line_end":13,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24461,"byte_end":24464,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<CachedThreadLocal<T>>::new","value":"fn () -> CachedThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `CachedThreadLocal`.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24405,"byte_end":24449,"line_start":30,"line_end":30,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24737,"byte_end":24740,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"get","qualname":"<CachedThreadLocal<T>>::get","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24664,"byte_end":24725,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":25202,"byte_end":25208,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"get_or","qualname":"<CachedThreadLocal<T>>::get_or","value":"fn <F> (&self, create: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":25078,"byte_end":25153,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":25158,"byte_end":25168,"line_start":53,"line_end":53,"column_start":5,"column_end":15}},{"value":"inline(always)","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":25173,"byte_end":25190,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":25586,"byte_end":25596,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<CachedThreadLocal<T>>::get_or_try","value":"fn <F, E> (&self, create: F) -> Result<&T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":25409,"byte_end":25484,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":25489,"byte_end":25559,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":25564,"byte_end":25574,"line_start":67,"line_end":67,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":26875,"byte_end":26883,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<CachedThreadLocal<T>>::iter_mut","value":"fn (&mut self) -> CachedIterMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":26569,"byte_end":26637,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":26642,"byte_end":26645,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":26650,"byte_end":26723,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":26728,"byte_end":26798,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":26803,"byte_end":26863,"line_start":102,"line_end":102,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27439,"byte_end":27444,"line_start":116,"line_end":116,"column_start":12,"column_end":17},"name":"clear","qualname":"<CachedThreadLocal<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27084,"byte_end":27158,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27163,"byte_end":27201,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27206,"byte_end":27209,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27214,"byte_end":27287,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27292,"byte_end":27362,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27367,"byte_end":27427,"line_start":115,"line_end":115,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28214,"byte_end":28228,"line_start":145,"line_end":145,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<CachedThreadLocal<T>>::get_or_default","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28101,"byte_end":28176,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28181,"byte_end":28202,"line_start":144,"line_end":144,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28629,"byte_end":28642,"line_start":159,"line_end":159,"column_start":12,"column_end":25},"name":"CachedIterMut","qualname":"::cached::CachedIterMut","value":"CachedIterMut {  }","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"decl_id":null,"docs":" Mutable iterator over the contents of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `CachedThreadLocal`.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28553,"byte_end":28617,"line_start":158,"line_end":158,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":29222,"byte_end":29236,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"CachedIntoIter","qualname":"::cached::CachedIntoIter","value":"CachedIntoIter {  }","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" An iterator that moves out of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `CachedThreadLocal`.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":29154,"byte_end":29210,"line_start":179,"line_end":179,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":3271,"byte_end":3282,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"ThreadLocal","qualname":"::ThreadLocal","value":"ThreadLocal {  }","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" Thread-local variable wrapper","sig":null,"attributes":[{"value":"/ Thread-local variable wrapper","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":3159,"byte_end":3192,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":3193,"byte_end":3196,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](index.html) for more.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":3197,"byte_end":3259,"line_start":92,"line_end":92,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5212,"byte_end":5215,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<ThreadLocal<T>>::new","value":"fn () -> ThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `ThreadLocal`.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5162,"byte_end":5200,"line_start":163,"line_end":163,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5724,"byte_end":5727,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"get","qualname":"<ThreadLocal<T>>::get","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5651,"byte_end":5712,"line_start":180,"line_end":180,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5925,"byte_end":5931,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"get_or","qualname":"<ThreadLocal<T>>::get_or","value":"fn <F> (&self, create: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5823,"byte_end":5898,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5903,"byte_end":5913,"line_start":187,"line_end":187,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":6309,"byte_end":6319,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<ThreadLocal<T>>::get_or_try","value":"fn <F, E> (&self, create: F) -> Result<&T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":6132,"byte_end":6207,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":6212,"byte_end":6282,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":6287,"byte_end":6297,"line_start":200,"line_end":200,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":10977,"byte_end":10985,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ThreadLocal<T>>::iter_mut","value":"fn (&mut self) -> IterMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":10671,"byte_end":10739,"line_start":315,"line_end":315,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":10744,"byte_end":10747,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":10752,"byte_end":10825,"line_start":317,"line_end":317,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":10830,"byte_end":10900,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":10905,"byte_end":10965,"line_start":319,"line_end":319,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11474,"byte_end":11479,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"clear","qualname":"<ThreadLocal<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11119,"byte_end":11193,"line_start":327,"line_end":327,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11198,"byte_end":11236,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11241,"byte_end":11244,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11249,"byte_end":11322,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11327,"byte_end":11397,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11402,"byte_end":11462,"line_start":332,"line_end":332,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12151,"byte_end":12165,"line_start":362,"line_end":362,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<ThreadLocal<T>>::get_or_default","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12038,"byte_end":12113,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12118,"byte_end":12139,"line_start":361,"line_end":361,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":13472,"byte_end":13479,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" Mutable iterator over the contents of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `ThreadLocal`.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":13402,"byte_end":13460,"line_start":409,"line_end":409,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":14033,"byte_end":14041,"line_start":432,"line_end":432,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" An iterator that moves out of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `ThreadLocal`.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":13971,"byte_end":14021,"line_start":431,"line_end":431,"column_start":1,"column_end":51}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/thread_id.rs","byte_start":19939,"byte_end":19954,"line_start":19,"line_end":19,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/thread_id.rs","byte_start":20719,"byte_end":20727,"line_start":46,"line_end":46,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/thread_id.rs","byte_start":20839,"byte_end":20847,"line_start":51,"line_end":51,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/unreachable.rs","byte_start":22834,"byte_end":22840,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/unreachable.rs","byte_start":23125,"byte_end":23131,"line_start":60,"line_end":60,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24205,"byte_end":24222,"line_start":21,"line_end":21,"column_start":31,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24256,"byte_end":24273,"line_start":23,"line_end":23,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24378,"byte_end":24395,"line_start":29,"line_end":29,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27540,"byte_end":27557,"line_start":121,"line_end":121,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28074,"byte_end":28091,"line_start":142,"line_end":142,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28327,"byte_end":28344,"line_start":150,"line_end":150,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28528,"byte_end":28545,"line_start":156,"line_end":156,"column_start":43,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28760,"byte_end":28773,"line_start":164,"line_end":164,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":29129,"byte_end":29142,"line_start":177,"line_end":177,"column_start":46,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":29325,"byte_end":29339,"line_start":185,"line_end":185,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":29666,"byte_end":29680,"line_start":198,"line_end":198,"column_start":37,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":4235,"byte_end":4246,"line_start":124,"line_end":124,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":4280,"byte_end":4291,"line_start":126,"line_end":126,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":4393,"byte_end":4404,"line_start":132,"line_end":132,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":4628,"byte_end":4638,"line_start":141,"line_end":141,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5141,"byte_end":5152,"line_start":162,"line_end":162,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11569,"byte_end":11580,"line_start":338,"line_end":338,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12017,"byte_end":12028,"line_start":359,"line_end":359,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12270,"byte_end":12281,"line_start":367,"line_end":367,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12465,"byte_end":12476,"line_start":373,"line_end":373,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12608,"byte_end":12615,"line_start":381,"line_end":381,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":13609,"byte_end":13616,"line_start":415,"line_end":415,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":13952,"byte_end":13959,"line_start":429,"line_end":429,"column_start":46,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":14139,"byte_end":14147,"line_start":437,"line_end":437,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":14446,"byte_end":14454,"line_start":451,"line_end":451,"column_start":37,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/thread_id.rs","byte_start":19939,"byte_end":19954,"line_start":19,"line_end":19,"column_start":6,"column_end":21},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":8},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/thread_id.rs","byte_start":20719,"byte_end":20727,"line_start":46,"line_end":46,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":15},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/thread_id.rs","byte_start":20839,"byte_end":20847,"line_start":51,"line_end":51,"column_start":15,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":15},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/unreachable.rs","byte_start":22834,"byte_end":22840,"line_start":47,"line_end":47,"column_start":35,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":29905},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/unreachable.rs","byte_start":23125,"byte_end":23131,"line_start":60,"line_end":60,"column_start":41,"column_end":47},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":30026},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24205,"byte_end":24222,"line_start":21,"line_end":21,"column_start":31,"column_end":48},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24256,"byte_end":24273,"line_start":23,"line_end":23,"column_start":27,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":24378,"byte_end":24395,"line_start":29,"line_end":29,"column_start":15,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":27540,"byte_end":27557,"line_start":121,"line_end":121,"column_start":32,"column_end":49},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":4875}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28074,"byte_end":28091,"line_start":142,"line_end":142,"column_start":25,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28327,"byte_end":28344,"line_start":150,"line_end":150,"column_start":43,"column_end":60},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28528,"byte_end":28545,"line_start":156,"line_end":156,"column_start":43,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":3748}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":28760,"byte_end":28773,"line_start":164,"line_end":164,"column_start":37,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":29129,"byte_end":29142,"line_start":177,"line_end":177,"column_start":46,"column_end":59},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":29325,"byte_end":29339,"line_start":185,"line_end":185,"column_start":28,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/cached.rs","byte_start":29666,"byte_end":29680,"line_start":198,"line_end":198,"column_start":37,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":4235,"byte_end":4246,"line_start":124,"line_end":124,"column_start":31,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":4280,"byte_end":4291,"line_start":126,"line_end":126,"column_start":27,"column_end":38},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":4393,"byte_end":4404,"line_start":132,"line_end":132,"column_start":24,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":4628,"byte_end":4638,"line_start":141,"line_end":141,"column_start":25,"column_end":35},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":158},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":5141,"byte_end":5152,"line_start":162,"line_end":162,"column_start":15,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":11569,"byte_end":11580,"line_start":338,"line_end":338,"column_start":32,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":4875}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12017,"byte_end":12028,"line_start":359,"line_end":359,"column_start":25,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12270,"byte_end":12281,"line_start":367,"line_end":367,"column_start":43,"column_end":54},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":149},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12465,"byte_end":12476,"line_start":373,"line_end":373,"column_start":43,"column_end":54},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":149},"to":{"krate":1,"index":3748}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":12608,"byte_end":12615,"line_start":381,"line_end":381,"column_start":28,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":13609,"byte_end":13616,"line_start":415,"line_end":415,"column_start":37,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":13952,"byte_end":13959,"line_start":429,"line_end":429,"column_start":46,"column_end":53},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":14139,"byte_end":14147,"line_start":437,"line_end":437,"column_start":28,"column_end":36},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":235},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.0.1/src/lib.rs","byte_start":14446,"byte_end":14454,"line_start":451,"line_end":451,"column_start":37,"column_end":45},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":235},"to":{"krate":2,"index":4920}}]}