{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15","program":"/home/miguel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","getrandom","--edition=2018","/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=001ba7db22d858a7","-C","extra-filename=-001ba7db22d858a7","--out-dir","/home/miguel/Documents/rust-exercises/spelling/target/rls/debug/deps","-L","dependency=/home/miguel/Documents/rust-exercises/spelling/target/rls/debug/deps","--extern","cfg_if=/home/miguel/Documents/rust-exercises/spelling/target/rls/debug/deps/libcfg_if-a5ca3166977a3033.rmeta","--extern","libc=/home/miguel/Documents/rust-exercises/spelling/target/rls/debug/deps/liblibc-caef079c0706fc64.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/miguel/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/miguel/Documents/rust-exercises/spelling/target/rls/debug/deps/libgetrandom-001ba7db22d858a7.rmeta"},"prelude":{"crate_id":{"name":"getrandom","disambiguator":[11720355070682074774,4560821763973530984]},"crate_root":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src","external_crates":[{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[1145230128757463294,15976268636418953592]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[10006185802367012891,4937926339965588888]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[18134491841186215314,8619879253945163470]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","num":4,"id":{"name":"cfg_if","disambiguator":[8399646777753009860,5233712646035546754]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":5,"id":{"name":"std","disambiguator":[13842155912677385872,11660590378338683385]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":6,"id":{"name":"alloc","disambiguator":[4357087487764653857,7816708319091665300]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":7,"id":{"name":"libc","disambiguator":[10862771416828768076,14090399182622295334]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":8,"id":{"name":"unwind","disambiguator":[7832813774001485751,4465207999706185911]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":9,"id":{"name":"cfg_if","disambiguator":[14203079308812153325,7069038021421518271]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":10,"id":{"name":"backtrace","disambiguator":[17468104730350570711,1510909898039763528]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11081656445949358564,12304596919514716713]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[4496289705150708668,14963538919535077439]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":13,"id":{"name":"hashbrown","disambiguator":[12585038344938944291,11081610577875308163]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4866546307375520792,3681606541934731072]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[6903286030758146719,12939842262273902871]}},{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/util_libc.rs","num":16,"id":{"name":"libc","disambiguator":[1098977783598941615,6727081254032812279]}}],"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":356,"byte_end":12501,"line_start":9,"line_end":282,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":7830,"byte_end":7835,"line_start":159,"line_end":159,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":356,"byte_end":12501,"line_start":9,"line_end":282,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":5},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":112},{"krate":0,"index":129},{"krate":0,"index":58},{"krate":0,"index":145},{"krate":0,"index":93}],"decl_id":null,"docs":" Interface to the random number generator of the operating system.","sig":null,"attributes":[{"value":"! Interface to the random number generator of the operating system.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":356,"byte_end":425,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":426,"byte_end":429,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Platform sources","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":430,"byte_end":452,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":453,"byte_end":456,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! | OS               | interface","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":457,"byte_end":491,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"! |------------------|---------------------------------------------------------","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":492,"byte_end":573,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"! | Linux, Android   | [`getrandom`][1] system call if available, otherwise [`/dev/urandom`][2] after successfully polling `/dev/random`","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":574,"byte_end":712,"line_start":15,"line_end":15,"column_start":1,"column_end":139}},{"value":"! | Windows          | [`RtlGenRandom`][3]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":713,"byte_end":757,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"! | macOS            | [`getentropy()`][19] if available, otherwise [`/dev/random`][20] (identical to `/dev/urandom`)","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":758,"byte_end":877,"line_start":17,"line_end":17,"column_start":1,"column_end":120}},{"value":"! | iOS              | [`SecRandomCopyBytes`][4]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":878,"byte_end":928,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"! | FreeBSD          | [`getrandom()`][21] if available, otherwise [`kern.arandom`][5]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":929,"byte_end":1017,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"! | OpenBSD          | [`getentropy`][6]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1018,"byte_end":1060,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"! | NetBSD           | [`kern.arandom`][7]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1061,"byte_end":1105,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"! | Dragonfly BSD    | [`/dev/random`][8]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1106,"byte_end":1149,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"! | Solaris, illumos | [`getrandom`][9] system call if available, otherwise [`/dev/random`][10]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1150,"byte_end":1247,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"! | Fuchsia OS       | [`cprng_draw`][11]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1248,"byte_end":1291,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"! | Redox            | [`rand:`][12]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1292,"byte_end":1330,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"! | CloudABI         | [`cloudabi_sys_random_get`][13]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1331,"byte_end":1387,"line_start":26,"line_end":26,"column_start":1,"column_end":57}},{"value":"! | Haiku            | `/dev/random` (identical to `/dev/urandom`)","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1388,"byte_end":1456,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"! | L4RE, SGX, UEFI  | [RDRAND][18]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1457,"byte_end":1494,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"! | Hermit           | [RDRAND][18] as [`sys_rand`][22] is currently broken.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1495,"byte_end":1573,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"! | VxWorks          | `randABytes` after checking entropy pool initialization with `randSecure`","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1574,"byte_end":1672,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"! | Web browsers     | [`Crypto.getRandomValues`][14] (see [Support for WebAssembly and asm.js][16])","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1673,"byte_end":1775,"line_start":31,"line_end":31,"column_start":1,"column_end":103}},{"value":"! | Node.js          | [`crypto.randomBytes`][15] (see [Support for WebAssembly and asm.js][16])","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1776,"byte_end":1874,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"! | WASI             | [`__wasi_random_get`][17]","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1875,"byte_end":1925,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1926,"byte_end":1929,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! Getrandom doesn't have a blanket implementation for all Unix-like operating","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":1930,"byte_end":2009,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"! systems that reads from `/dev/urandom`. This ensures all supported operating","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2010,"byte_end":2090,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"! systems are using the recommended interface and respect maximum buffer","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2091,"byte_end":2165,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"! sizes.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2166,"byte_end":2176,"line_start":38,"line_end":38,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2177,"byte_end":2180,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ## Unsupported targets","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2181,"byte_end":2207,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2208,"byte_end":2211,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! By default, compiling `getrandom` for an unsupported target will result in","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2212,"byte_end":2290,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"! a compilation error. If you want to build an application which uses `getrandom`","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2291,"byte_end":2374,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"! for such target, you can either:","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2375,"byte_end":2411,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"! - Use [`[replace]`][replace] or [`[patch]`][patch] section in your `Cargo.toml`","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2412,"byte_end":2495,"line_start":45,"line_end":45,"column_start":1,"column_end":84}},{"value":"! to switch to a custom implementation with a support of your target.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2496,"byte_end":2567,"line_start":46,"line_end":46,"column_start":1,"column_end":72}},{"value":"! - Enable the `dummy` feature to have getrandom use an implementation that always","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2568,"byte_end":2652,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"! fails at run-time on unsupported targets.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2653,"byte_end":2698,"line_start":48,"line_end":48,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2699,"byte_end":2702,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! [replace]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-replace-section","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2703,"byte_end":2793,"line_start":50,"line_end":50,"column_start":1,"column_end":91}},{"value":"! [patch]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-patch-section","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2794,"byte_end":2880,"line_start":51,"line_end":51,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2881,"byte_end":2884,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! ## Support for WebAssembly and asm.js","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2885,"byte_end":2926,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2927,"byte_end":2930,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! Getrandom supports all of Rust's current `wasm32` targets, and it works with","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":2931,"byte_end":3011,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"! both Node.js and web browsers. The three Emscripten targets","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3012,"byte_end":3075,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"! `asmjs-unknown-emscripten`, `wasm32-unknown-emscripten`, and","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3076,"byte_end":3140,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"! `wasm32-experimental-emscripten` use Emscripten's `/dev/random` emulation.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3141,"byte_end":3219,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"! The WASI target `wasm32-wasi` uses the [`__wasi_random_get`][17] function","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3220,"byte_end":3297,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"! defined by the WASI standard.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3298,"byte_end":3331,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3332,"byte_end":3335,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! Getrandom also supports `wasm32-unknown-unknown` by directly calling","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3336,"byte_end":3408,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"! JavaScript methods. Rust currently has two ways to do this: [bindgen] and","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3409,"byte_end":3486,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"! [stdweb]. Getrandom supports using either one by enabling the","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3487,"byte_end":3552,"line_start":64,"line_end":64,"column_start":1,"column_end":66}},{"value":"! `wasm-bindgen` or `stdweb` crate features. Note that if both features are","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3553,"byte_end":3630,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"! enabled, `wasm-bindgen` will be used. If neither feature is enabled, calls","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3631,"byte_end":3709,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! to `getrandom` will always fail at runtime.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3710,"byte_end":3757,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3758,"byte_end":3761,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! [bindgen]: https://github.com/rust-lang/rust-bindgen","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3762,"byte_end":3818,"line_start":69,"line_end":69,"column_start":1,"column_end":57}},{"value":"! [stdweb]: https://github.com/koute/stdweb","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3819,"byte_end":3864,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3865,"byte_end":3868,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! ## Early boot","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3869,"byte_end":3886,"line_start":72,"line_end":72,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3887,"byte_end":3890,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! It is possible that early in the boot process the OS hasn't had enough time","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3891,"byte_end":3970,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"! yet to collect entropy to securely seed its RNG, especially on virtual","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":3971,"byte_end":4045,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"! machines.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4046,"byte_end":4059,"line_start":76,"line_end":76,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4060,"byte_end":4063,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! Some operating systems always block the thread until the RNG is securely","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4064,"byte_end":4140,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! seeded. This can take anywhere from a few seconds to more than a minute.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4141,"byte_end":4217,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"! Others make a best effort to use a seed from before the shutdown and don't","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4218,"byte_end":4296,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"! document much.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4297,"byte_end":4315,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4316,"byte_end":4319,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! A few, Linux, NetBSD and Solaris, offer a choice between blocking and","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4320,"byte_end":4393,"line_start":83,"line_end":83,"column_start":1,"column_end":74}},{"value":"! getting an error; in these cases we always choose to block.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4394,"byte_end":4457,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4458,"byte_end":4461,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! On Linux (when the `getrandom` system call is not available) and on NetBSD","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4462,"byte_end":4540,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"! reading from `/dev/urandom` never blocks, even when the OS hasn't collected","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4541,"byte_end":4620,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"! enough entropy yet. To avoid returning low-entropy bytes, we first read from","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4621,"byte_end":4701,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! `/dev/random` and only switch to `/dev/urandom` once this has succeeded.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4702,"byte_end":4778,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4779,"byte_end":4782,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! # Error handling","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4783,"byte_end":4803,"line_start":91,"line_end":91,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4804,"byte_end":4807,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! We always choose failure over returning insecure \"random\" bytes. In general,","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4808,"byte_end":4888,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"! on supported platforms, failure is highly unlikely, though not impossible.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4889,"byte_end":4967,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"! If an error does occur, then it is likely that it will occur on every call to","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":4968,"byte_end":5049,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! `getrandom`, hence after the first successful call one can be reasonably","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5050,"byte_end":5126,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"! confident that no errors will occur.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5127,"byte_end":5167,"line_start":97,"line_end":97,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5168,"byte_end":5171,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! On unsupported platforms, `getrandom` always fails. See the [`Error`] type","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5172,"byte_end":5250,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"! for more information on what data is returned on failure.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5251,"byte_end":5312,"line_start":100,"line_end":100,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5313,"byte_end":5316,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! [1]: http://man7.org/linux/man-pages/man2/getrandom.2.html","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5317,"byte_end":5379,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"! [2]: http://man7.org/linux/man-pages/man4/urandom.4.html","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5380,"byte_end":5440,"line_start":103,"line_end":103,"column_start":1,"column_end":61}},{"value":"! [3]: https://docs.microsoft.com/en-us/windows/desktop/api/ntsecapi/nf-ntsecapi-rtlgenrandom","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5441,"byte_end":5536,"line_start":104,"line_end":104,"column_start":1,"column_end":96}},{"value":"! [4]: https://developer.apple.com/documentation/security/1399291-secrandomcopybytes?language=objc","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5537,"byte_end":5637,"line_start":105,"line_end":105,"column_start":1,"column_end":101}},{"value":"! [5]: https://www.freebsd.org/cgi/man.cgi?query=random&sektion=4","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5638,"byte_end":5705,"line_start":106,"line_end":106,"column_start":1,"column_end":68}},{"value":"! [6]: https://man.openbsd.org/getentropy.2","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5706,"byte_end":5751,"line_start":107,"line_end":107,"column_start":1,"column_end":46}},{"value":"! [7]: https://netbsd.gw.com/cgi-bin/man-cgi?sysctl+7+NetBSD-8.0","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5752,"byte_end":5818,"line_start":108,"line_end":108,"column_start":1,"column_end":67}},{"value":"! [8]: https://leaf.dragonflybsd.org/cgi/web-man?command=random&section=4","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5819,"byte_end":5894,"line_start":109,"line_end":109,"column_start":1,"column_end":76}},{"value":"! [9]: https://docs.oracle.com/cd/E88353_01/html/E37841/getrandom-2.html","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5895,"byte_end":5969,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"! [10]: https://docs.oracle.com/cd/E86824_01/html/E54777/random-7d.html","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":5970,"byte_end":6043,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"! [11]: https://fuchsia.dev/fuchsia-src/zircon/syscalls/cprng_draw","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6044,"byte_end":6112,"line_start":112,"line_end":112,"column_start":1,"column_end":69}},{"value":"! [12]: https://github.com/redox-os/randd/blob/master/src/main.rs","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6113,"byte_end":6180,"line_start":113,"line_end":113,"column_start":1,"column_end":68}},{"value":"! [13]: https://github.com/nuxinl/cloudabi#random_get","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6181,"byte_end":6236,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"! [14]: https://www.w3.org/TR/WebCryptoAPI/#Crypto-method-getRandomValues","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6237,"byte_end":6312,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"! [15]: https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6313,"byte_end":6397,"line_start":116,"line_end":116,"column_start":1,"column_end":85}},{"value":"! [16]: #support-for-webassembly-and-asmjs","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6398,"byte_end":6442,"line_start":117,"line_end":117,"column_start":1,"column_end":45}},{"value":"! [17]: https://github.com/WebAssembly/WASI/blob/master/design/WASI-core.md#__wasi_random_get","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6443,"byte_end":6538,"line_start":118,"line_end":118,"column_start":1,"column_end":96}},{"value":"! [18]: https://software.intel.com/en-us/articles/intel-digital-random-number-generator-drng-software-implementation-guide","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6539,"byte_end":6663,"line_start":119,"line_end":119,"column_start":1,"column_end":125}},{"value":"! [19]: https://www.unix.com/man-page/mojave/2/getentropy/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6664,"byte_end":6724,"line_start":120,"line_end":120,"column_start":1,"column_end":61}},{"value":"! [20]: https://www.unix.com/man-page/mojave/4/random/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6725,"byte_end":6781,"line_start":121,"line_end":121,"column_start":1,"column_end":57}},{"value":"! [21]: https://www.freebsd.org/cgi/man.cgi?query=getrandom&manpath=FreeBSD+12.0-stable","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6782,"byte_end":6871,"line_start":122,"line_end":122,"column_start":1,"column_end":90}},{"value":"! [22]: https://github.com/hermitcore/libhermit-rs/blob/09c38b0371cee6f56a541400ba453e319e43db53/src/syscalls/random.rs#L21","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":6872,"byte_end":6997,"line_start":123,"line_end":123,"column_start":1,"column_end":126}},{"value":"no_std","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":7213,"byte_end":7223,"line_start":130,"line_end":130,"column_start":1,"column_end":11}},{"value":"warn(rust_2018_idioms, unused_lifetimes, missing_docs)","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":7282,"byte_end":7340,"line_start":132,"line_end":132,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13384,"byte_end":13389,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" A small and `no_std` compatible error type.","sig":null,"attributes":[{"value":"/ A small and `no_std` compatible error type.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":12901,"byte_end":12948,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":12949,"byte_end":12952,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The [`Error::raw_os_error()`] will indicate if the error is from the OS, and","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":12953,"byte_end":13033,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ if so, which error code the OS gave the application. If such an error is","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13034,"byte_end":13110,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ encountered, please consult with your system documentation.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13111,"byte_end":13174,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13175,"byte_end":13178,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Internally this type is a NonZeroU32, with certain values reserved for","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13179,"byte_end":13253,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ certain purposes, see [`Error::INTERNAL_START`] and [`Error::CUSTOM_START`].","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13254,"byte_end":13334,"line_start":18,"line_end":18,"column_start":1,"column_end":81}}]},{"kind":"Const","id":{"krate":0,"index":9},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13489,"byte_end":13496,"line_start":25,"line_end":25,"column_start":15,"column_end":22},"name":"UNKNOWN","qualname":"::error::Error::UNKNOWN","value":"Error","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Unknown error.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.7\")","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13421,"byte_end":13451,"line_start":23,"line_end":23,"column_start":5,"column_end":35}},{"value":"/ Unknown error.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13456,"byte_end":13474,"line_start":24,"line_end":24,"column_start":5,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":10},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13614,"byte_end":13625,"line_start":28,"line_end":28,"column_start":15,"column_end":26},"name":"UNAVAILABLE","qualname":"::error::Error::UNAVAILABLE","value":"Error","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" System entropy source is unavailable.\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.1.7\")","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13523,"byte_end":13553,"line_start":26,"line_end":26,"column_start":5,"column_end":35}},{"value":"/ System entropy source is unavailable.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13558,"byte_end":13599,"line_start":27,"line_end":27,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":11},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13881,"byte_end":13895,"line_start":33,"line_end":33,"column_start":15,"column_end":29},"name":"INTERNAL_START","qualname":"::error::Error::INTERNAL_START","value":"u32","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Codes below this point represent OS Errors (i.e. positive i32 values).\n Codes at or above this point, but below [`Error::CUSTOM_START`] are\n reserved for use by the `rand` and `getrandom` crates.\n","sig":null,"attributes":[{"value":"/ Codes below this point represent OS Errors (i.e. positive i32 values).","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13653,"byte_end":13727,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ Codes at or above this point, but below [`Error::CUSTOM_START`] are","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13732,"byte_end":13803,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ reserved for use by the `rand` and `getrandom` crates.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13808,"byte_end":13866,"line_start":32,"line_end":32,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14028,"byte_end":14040,"line_start":37,"line_end":37,"column_start":15,"column_end":27},"name":"CUSTOM_START","qualname":"::error::Error::CUSTOM_START","value":"u32","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Codes at or above this point can be used by users to define their own\n custom errors.\n","sig":null,"attributes":[{"value":"/ Codes at or above this point can be used by users to define their own","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13917,"byte_end":13990,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ custom errors.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13995,"byte_end":14013,"line_start":36,"line_end":36,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14409,"byte_end":14421,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"raw_os_error","qualname":"<Error>::raw_os_error","value":"fn (self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Extract the raw OS error code (if this error came from the OS)","sig":null,"attributes":[{"value":"/ Extract the raw OS error code (if this error came from the OS)","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14076,"byte_end":14142,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14147,"byte_end":14150,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This method is identical to `std::io::Error::raw_os_error()`, except","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14155,"byte_end":14227,"line_start":41,"line_end":41,"column_start":5,"column_end":77}},{"value":"/ that it works in `no_std` contexts. If this method returns `None`, the","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14232,"byte_end":14306,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ error value can still be formatted via the `Display` implementation.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14311,"byte_end":14383,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14388,"byte_end":14397,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14788,"byte_end":14792,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"code","qualname":"<Error>::code","value":"fn (self) -> NonZeroU32","parent":null,"children":[],"decl_id":null,"docs":" Extract the bare error code.","sig":null,"attributes":[{"value":"/ Extract the bare error code.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14587,"byte_end":14619,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14624,"byte_end":14627,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This code can either come from the underlying OS, or be a custom error.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14632,"byte_end":14707,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ Use [`Error::raw_os_error()`] to disambiguate.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14712,"byte_end":14762,"line_start":56,"line_end":56,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":14767,"byte_end":14776,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":12358,"byte_end":12367,"line_start":277,"line_end":277,"column_start":8,"column_end":17},"name":"getrandom","qualname":"::getrandom","value":"fn (dest: &mut [u8]) -> Result<(), error::Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill `dest` with random bytes from the system's preferred random number\n source.","sig":null,"attributes":[{"value":"/ Fill `dest` with random bytes from the system's preferred random number","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":11678,"byte_end":11753,"line_start":264,"line_end":264,"column_start":1,"column_end":76}},{"value":"/ source.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":11754,"byte_end":11765,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":11766,"byte_end":11769,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ This function returns an error on any failure, including partial reads. We","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":11770,"byte_end":11848,"line_start":267,"line_end":267,"column_start":1,"column_end":79}},{"value":"/ make no guarantees regarding the contents of `dest` on error. If `dest` is","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":11849,"byte_end":11927,"line_start":268,"line_end":268,"column_start":1,"column_end":79}},{"value":"/ empty, `getrandom` immediately returns success, making no calls to the","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":11928,"byte_end":12002,"line_start":269,"line_end":269,"column_start":1,"column_end":75}},{"value":"/ underlying operating system.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":12003,"byte_end":12035,"line_start":270,"line_end":270,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":12036,"byte_end":12039,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Blocking is possible, at least during early boot; see module documentation.","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":12040,"byte_end":12119,"line_start":272,"line_end":272,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":12120,"byte_end":12123,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ In general, `getrandom` will be fast enough for interactive usage, though","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":12124,"byte_end":12201,"line_start":274,"line_end":274,"column_start":1,"column_end":78}},{"value":"/ significantly slower than a user-space CSPRNG; for the latter consider","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":12202,"byte_end":12276,"line_start":275,"line_end":275,"column_start":1,"column_end":75}},{"value":"/ [`rand::thread_rng`](https://docs.rs/rand/*/rand/fn.thread_rng.html).","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/lib.rs","byte_start":12277,"byte_end":12350,"line_start":276,"line_end":276,"column_start":1,"column_end":74}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13409,"byte_end":13414,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":15639,"byte_end":15644,"line_start":87,"line_end":87,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":16299,"byte_end":16304,"line_start":106,"line_end":106,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":16823,"byte_end":16828,"line_start":122,"line_end":122,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/util.rs","byte_start":20387,"byte_end":20396,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/util.rs","byte_start":21227,"byte_end":21235,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/util_libc.rs","byte_start":4651116,"byte_end":4651120,"line_start":82,"line_end":82,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","byte_start":4652971,"byte_end":4652976,"line_start":15,"line_end":15,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","byte_start":4653256,"byte_end":4653261,"line_start":26,"line_end":26,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","byte_start":4653506,"byte_end":4653511,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/use_file.rs","byte_start":25266,"byte_end":25271,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/use_file.rs","byte_start":25644,"byte_end":25649,"line_start":129,"line_end":129,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/use_file.rs","byte_start":25714,"byte_end":25723,"line_start":133,"line_end":133,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":13409,"byte_end":13414,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":15639,"byte_end":15644,"line_start":87,"line_end":87,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":16299,"byte_end":16304,"line_start":106,"line_end":106,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":6181}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error.rs","byte_start":16823,"byte_end":16828,"line_start":122,"line_end":122,"column_start":27,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/util.rs","byte_start":20387,"byte_end":20396,"line_start":31,"line_end":31,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":42},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/util.rs","byte_start":21227,"byte_end":21235,"line_start":56,"line_end":56,"column_start":6,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/util_libc.rs","byte_start":4651116,"byte_end":4651120,"line_start":82,"line_end":82,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","byte_start":4652971,"byte_end":4652976,"line_start":15,"line_end":15,"column_start":26,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","byte_start":4653256,"byte_end":4653261,"line_start":26,"line_end":26,"column_start":26,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":2532},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/error_impls.rs","byte_start":4653506,"byte_end":4653511,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":97},"to":{"krate":5,"index":1642}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/use_file.rs","byte_start":25266,"byte_end":25271,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/use_file.rs","byte_start":25644,"byte_end":25649,"line_start":129,"line_end":129,"column_start":22,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":78},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/miguel/.cargo/registry/src/github.com-1ecc6299db9ec823/getrandom-0.1.15/src/use_file.rs","byte_start":25714,"byte_end":25723,"line_start":133,"line_end":133,"column_start":27,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":86},"to":{"krate":1,"index":2098}}]}